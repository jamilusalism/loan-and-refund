/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loan_and_refund;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author MJ
 */
public class Dashboard extends javax.swing.JFrame {
    private static final String username = "root";
    private static final String password = "";
    private static final String ConnString = "jdbc:mysql://localhost/loanscheme";
    private Connection conn = null;
    private Statement st;
    String[][] data1 = new String[200][19];
    
    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        
        tab2_loan_request.hide();
        tab4_manage_business.hide();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        navigationBar = new javax.swing.JPanel();
        tab1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tab2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tab3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tab4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tab5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tab1_customer_reg = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        gender = new javax.swing.JComboBox<>();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        bank = new javax.swing.JComboBox<>();
        accountno = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        addNew = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        oldPhone = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        beneficiarytbl = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        tab2_loan_request = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        t2_lname = new javax.swing.JTextField();
        t2_email = new javax.swing.JTextField();
        t2_phone = new javax.swing.JTextField();
        btype = new javax.swing.JComboBox<>();
        payduration = new javax.swing.JComboBox<>();
        amount = new javax.swing.JTextField();
        loandate = new javax.swing.JTextField();
        request = new javax.swing.JButton();
        t2_addNew = new javax.swing.JButton();
        iRate = new javax.swing.JLabel();
        t2_accountno = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        t2_fname = new javax.swing.JTextField();
        t2_id = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        phone_account = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        t2_search = new javax.swing.JButton();
        findData = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        loanrequesttbl = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        tab3_loan_payment = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        balamount = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        loanamount = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        payamount = new javax.swing.JTextField();
        t3_phone = new javax.swing.JTextField();
        dnum = new javax.swing.JTextField();
        t3_lname = new javax.swing.JTextField();
        loanduration = new javax.swing.JTextField();
        t3_fname = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        t3_loandate = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        paymentdate = new javax.swing.JTextField();
        t3_id = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        pay = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        makeNewPayment = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel30 = new javax.swing.JLabel();
        account_phone = new javax.swing.JTextField();
        t3_findData = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        loanpaymenttbl = new javax.swing.JTable();
        jLabel37 = new javax.swing.JLabel();
        t3_search = new javax.swing.JButton();
        tab4_manage_business = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        btypetbl = new javax.swing.JTable();
        jLabel40 = new javax.swing.JLabel();
        bname = new javax.swing.JTextField();
        t4_save = new javax.swing.JButton();
        t4_update = new javax.swing.JButton();
        t4_id = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        navigationBar.setBackground(new java.awt.Color(0, 102, 102));

        tab1.setBackground(new java.awt.Color(255, 255, 255));
        tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Beneficiary Registration");

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
        );
        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab2.setBackground(new java.awt.Color(255, 255, 255));
        tab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab2MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Loan Request");

        javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
        tab2.setLayout(tab2Layout);
        tab2Layout.setHorizontalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tab2Layout.setVerticalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab3.setBackground(new java.awt.Color(255, 255, 255));
        tab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab3MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Loan Payment");

        javax.swing.GroupLayout tab3Layout = new javax.swing.GroupLayout(tab3);
        tab3.setLayout(tab3Layout);
        tab3Layout.setHorizontalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tab3Layout.setVerticalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab4.setBackground(new java.awt.Color(255, 255, 255));
        tab4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab4MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Manage Business");

        javax.swing.GroupLayout tab4Layout = new javax.swing.GroupLayout(tab4);
        tab4.setLayout(tab4Layout);
        tab4Layout.setHorizontalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tab4Layout.setVerticalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        tab5.setBackground(new java.awt.Color(255, 255, 255));
        tab5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab5MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Logout");

        javax.swing.GroupLayout tab5Layout = new javax.swing.GroupLayout(tab5);
        tab5.setLayout(tab5Layout);
        tab5Layout.setHorizontalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tab5Layout.setVerticalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout navigationBarLayout = new javax.swing.GroupLayout(navigationBar);
        navigationBar.setLayout(navigationBarLayout);
        navigationBarLayout.setHorizontalGroup(
            navigationBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navigationBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(navigationBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tab5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        navigationBarLayout.setVerticalGroup(
            navigationBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navigationBarLayout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(tab1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tab2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tab3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tab4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tab5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab1_customer_reg.setBackground(new java.awt.Color(232, 227, 247));
        tab1_customer_reg.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(103, 71, 199)));
        tab1_customer_reg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tab1_customer_regFocusGained(evt);
            }
        });
        tab1_customer_reg.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tab1_customer_regComponentShown(evt);
            }
        });
        tab1_customer_reg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel13.setText("Forenames:");
        tab1_customer_reg.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 66, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel14.setText("Lastname:");
        tab1_customer_reg.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 66, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel15.setText("Email:");
        tab1_customer_reg.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 130, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel6.setText("Phone:");
        tab1_customer_reg.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 130, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel16.setText("Bank Name:");
        tab1_customer_reg.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 192, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel17.setText("Gender:");
        tab1_customer_reg.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(489, 66, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel18.setText("Account Number:");
        tab1_customer_reg.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 192, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel19.setText("Address:");
        tab1_customer_reg.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(489, 130, -1, -1));

        fname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab1_customer_reg.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 88, 220, 31));

        lname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab1_customer_reg.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 88, 220, 31));

        gender.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select", "Female", "Male" }));
        tab1_customer_reg.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(489, 88, 220, 31));

        email.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab1_customer_reg.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 150, 220, 31));

        phone.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab1_customer_reg.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 150, 220, 31));

        bank.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        bank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select", "Access Bank", "Access Bank (Diamond Bank)", "CitiBank Nigeria", "Ecobank Nigeria", "Enterprise Bank", "Fidelity Bank", "First Bank Nigeria", "First City Monument Bank (FCMB)", "Guaranty Trust Bank (GTB)", "Heritage Bank", "Keystone Bank", "Mainstreet Bank Afribank ", "Skye Bank", "Stanbic IBTC Bank", "Standard Chartered Bank", "Sterling Bank", "SunTrust Bank Nigeria", "Union Bank", "United Bank For Africa (UBA)", "Unity Bank", "Wema Bank", "Zenith Bank" }));
        tab1_customer_reg.add(bank, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 216, 220, 31));

        accountno.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab1_customer_reg.add(accountno, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 216, 220, 31));

        address.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab1_customer_reg.add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(489, 150, 220, 31));

        save.setBackground(new java.awt.Color(0, 102, 102));
        save.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("SAVE");
        save.setBorder(null);
        save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        tab1_customer_reg.add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(562, 271, 150, 31));

        update.setBackground(new java.awt.Color(0, 102, 102));
        update.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("UPDATE");
        update.setBorder(null);
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        tab1_customer_reg.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(193, 271, 150, 31));

        addNew.setBackground(new java.awt.Color(0, 102, 102));
        addNew.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        addNew.setForeground(new java.awt.Color(255, 255, 255));
        addNew.setText("NEW");
        addNew.setBorder(null);
        addNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewActionPerformed(evt);
            }
        });
        tab1_customer_reg.add(addNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(382, 271, 150, 31));

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("DELETE");
        delete.setBorder(null);
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        tab1_customer_reg.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 271, 150, 31));
        tab1_customer_reg.add(oldPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 132, -1, -1));

        id.setEditable(false);
        id.setBackground(new java.awt.Color(255, 255, 255));
        id.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tab1_customer_reg.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(487, 216, 33, 31));
        tab1_customer_reg.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 258, 701, 7));

        beneficiarytbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        beneficiarytbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Full Name", "Email", "Phone", "Bank Name", "Account Number"
            }
        ));
        beneficiarytbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                beneficiarytblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(beneficiarytbl);

        tab1_customer_reg.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 315, 701, 164));

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("click on row to perform an operation ");
        tab1_customer_reg.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 485, 701, -1));

        jLabel26.setBackground(new java.awt.Color(103, 71, 199));
        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Beneficary Reg");
        jLabel26.setOpaque(true);
        tab1_customer_reg.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 40));

        tab2_loan_request.setBackground(new java.awt.Color(232, 227, 247));
        tab2_loan_request.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(103, 71, 199)));
        tab2_loan_request.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tab2_loan_requestComponentShown(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(103, 71, 199));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("LOAN REQUEST");
        jLabel8.setOpaque(true);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setText("Lastname:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setText("Phone:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel11.setText("Business Type:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel12.setText("Payment Duration:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel20.setText("Email:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel21.setText("Amount:");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel22.setText("Loan Date:");

        t2_lname.setEditable(false);
        t2_lname.setBackground(new java.awt.Color(255, 255, 255));
        t2_lname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        t2_lname.setEnabled(false);
        t2_lname.setOpaque(false);

        t2_email.setEditable(false);
        t2_email.setBackground(new java.awt.Color(255, 255, 255));
        t2_email.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        t2_email.setEnabled(false);
        t2_email.setOpaque(false);

        t2_phone.setEditable(false);
        t2_phone.setBackground(new java.awt.Color(255, 255, 255));
        t2_phone.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        t2_phone.setEnabled(false);
        t2_phone.setOpaque(false);

        btype.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select" }));

        payduration.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        payduration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select", "Weekly (max of 26-weeks)", "Monthly (max of 6-months)" }));
        payduration.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paydurationItemStateChanged(evt);
            }
        });

        amount.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        loandate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        request.setBackground(new java.awt.Color(0, 102, 102));
        request.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        request.setForeground(new java.awt.Color(255, 255, 255));
        request.setText("REQUEST");
        request.setBorder(null);
        request.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        request.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestActionPerformed(evt);
            }
        });

        t2_addNew.setBackground(new java.awt.Color(0, 102, 102));
        t2_addNew.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        t2_addNew.setForeground(new java.awt.Color(255, 255, 255));
        t2_addNew.setText("NEW");
        t2_addNew.setBorder(null);
        t2_addNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t2_addNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t2_addNewActionPerformed(evt);
            }
        });

        iRate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        iRate.setForeground(new java.awt.Color(200, 51, 0));
        iRate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        t2_accountno.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        t2_accountno.setText("jLabel11");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel24.setText("Forenames:");

        t2_fname.setEditable(false);
        t2_fname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        t2_fname.setEnabled(false);
        t2_fname.setOpaque(false);

        t2_id.setEditable(false);
        t2_id.setBackground(new java.awt.Color(255, 255, 255));
        t2_id.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        phone_account.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel25.setText("Beneficiary phone or account number");

        t2_search.setBackground(new java.awt.Color(51, 153, 0));
        t2_search.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        t2_search.setForeground(new java.awt.Color(255, 255, 255));
        t2_search.setText("SEARCH RECORD");
        t2_search.setBorder(null);
        t2_search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t2_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t2_searchActionPerformed(evt);
            }
        });

        findData.setText("dataFound to Loan");

        loanrequesttbl.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        loanrequesttbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Full Name", "Phone", "Duration", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loanrequesttbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loanrequesttblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(loanrequesttbl);

        jLabel23.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 102, 102));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("loan request logs");

        javax.swing.GroupLayout tab2_loan_requestLayout = new javax.swing.GroupLayout(tab2_loan_request);
        tab2_loan_request.setLayout(tab2_loan_requestLayout);
        tab2_loan_requestLayout.setHorizontalGroup(
            tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab2_loan_requestLayout.createSequentialGroup()
                                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3)
                                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(t2_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(request, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(14, 14, 14))
                            .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                                .addComponent(phone_account, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(29, 29, 29)
                                                .addComponent(t2_search, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(26, 26, 26)
                                        .addComponent(findData, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel24)
                                            .addComponent(t2_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(39, 39, 39)
                                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(t2_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(42, 42, 42)
                                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(t2_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(t2_accountno, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(21, 21, 21))))
                                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel20)
                                                    .addComponent(t2_email, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(39, 39, 39)
                                                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel11)
                                                    .addComponent(btype, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel21))
                                                .addGap(42, 42, 42)
                                                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                                                        .addComponent(jLabel22)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(iRate, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(loandate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(39, 39, 39)
                                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(t2_id, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(payduration, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12))))
                                .addGap(0, 28, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        tab2_loan_requestLayout.setVerticalGroup(
            tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phone_account, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2_search, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findData))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(t2_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                            .addComponent(jLabel24)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(t2_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(t2_accountno, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t2_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t2_email, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(payduration, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btype, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab2_loan_requestLayout.createSequentialGroup()
                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(loandate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(t2_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(iRate, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab2_loan_requestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t2_addNew, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(request, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tab3_loan_payment.setBackground(new java.awt.Color(232, 227, 247));
        tab3_loan_payment.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tab3_loan_paymentComponentShown(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel27.setText("Loan Duration:");

        balamount.setEditable(false);
        balamount.setBackground(new java.awt.Color(255, 255, 255));
        balamount.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel28.setText("Enter Amount:");

        loanamount.setEditable(false);
        loanamount.setBackground(new java.awt.Color(255, 255, 255));
        loanamount.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel29.setText("Payment Date:");

        payamount.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        t3_phone.setEditable(false);
        t3_phone.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        dnum.setEditable(false);
        dnum.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        t3_lname.setEditable(false);
        t3_lname.setBackground(new java.awt.Color(255, 255, 255));
        t3_lname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        loanduration.setEditable(false);
        loanduration.setBackground(new java.awt.Color(255, 255, 255));
        loanduration.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        t3_fname.setEditable(false);
        t3_fname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel31.setBackground(new java.awt.Color(103, 71, 199));
        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("LOAN PAYMENT");
        jLabel31.setOpaque(true);

        t3_loandate.setEditable(false);
        t3_loandate.setBackground(new java.awt.Color(255, 255, 255));
        t3_loandate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel32.setText("Forenames:");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel33.setText("Lastname:");

        paymentdate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        t3_id.setEditable(false);
        t3_id.setBackground(new java.awt.Color(255, 255, 255));
        t3_id.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel34.setText("Loan Date:");

        pay.setBackground(new java.awt.Color(0, 102, 102));
        pay.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        pay.setForeground(new java.awt.Color(255, 255, 255));
        pay.setText("PROCESS PAYMENT");
        pay.setBorder(null);
        pay.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel35.setText("Actual Loan Amount:");

        makeNewPayment.setBackground(new java.awt.Color(0, 102, 102));
        makeNewPayment.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        makeNewPayment.setForeground(new java.awt.Color(255, 255, 255));
        makeNewPayment.setText("ADD NEW PAYMENT");
        makeNewPayment.setBorder(null);
        makeNewPayment.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        makeNewPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeNewPaymentActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel36.setText("Outstanding Balance:");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel30.setText("Beneficiary phone or account number");

        account_phone.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        t3_findData.setText("dataFound to Loan");

        loanpaymenttbl.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        loanpaymenttbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Full Name", "Phone", "Duration", "Amount", "Date"
            }
        ));
        loanpaymenttbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loanpaymenttblMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(loanpaymenttbl);

        jLabel37.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 102, 102));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("loan payment logs");

        t3_search.setBackground(new java.awt.Color(0, 153, 51));
        t3_search.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        t3_search.setForeground(new java.awt.Color(255, 255, 255));
        t3_search.setText("SEARCH RECORD");
        t3_search.setBorder(null);
        t3_search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t3_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t3_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab3_loan_paymentLayout = new javax.swing.GroupLayout(tab3_loan_payment);
        tab3_loan_payment.setLayout(tab3_loan_paymentLayout);
        tab3_loan_paymentLayout.setHorizontalGroup(
            tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3_loan_paymentLayout.createSequentialGroup()
                .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(payamount, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(t3_loandate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loanamount, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)
                            .addComponent(paymentdate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29))
                        .addGap(46, 46, 46)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t3_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(balamount, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel36)
                            .addComponent(t3_id, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(loanduration, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24))
            .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel32)
                                            .addComponent(t3_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(42, 42, 42)
                                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                                                .addComponent(jLabel33)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(dnum, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(19, 19, 19))
                                            .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                                                .addComponent(t3_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                                                .addComponent(account_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addComponent(t3_search, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(32, 32, 32)
                                                .addComponent(t3_findData, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3_loan_paymentLayout.createSequentialGroup()
                        .addGap(0, 11, Short.MAX_VALUE)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                                .addComponent(makeNewPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(121, 121, 121)
                                .addComponent(pay, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))))
        );
        tab3_loan_paymentLayout.setVerticalGroup(
            tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(account_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t3_search, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t3_findData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3_loan_paymentLayout.createSequentialGroup()
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(jLabel33))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t3_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3_loan_paymentLayout.createSequentialGroup()
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(dnum, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(loanduration, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t3_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36))
                .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(t3_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(tab3_loan_paymentLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t3_loandate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loanamount, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(balamount, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(payamount, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(paymentdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t3_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab3_loan_paymentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makeNewPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37))
        );

        tab4_manage_business.setBackground(new java.awt.Color(232, 227, 247));
        tab4_manage_business.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tab4_manage_businessComponentShown(evt);
            }
        });

        jLabel38.setBackground(new java.awt.Color(103, 71, 199));
        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("BUSINESS TYPE REGISTRATION");
        jLabel38.setOpaque(true);

        jLabel39.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 102, 102));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("click on row to perform an operation ");

        btypetbl.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        btypetbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Business Name", "Created At"
            }
        ));
        btypetbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btypetblMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(btypetbl);

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel40.setText("Business Name:");

        bname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N

        t4_save.setBackground(new java.awt.Color(0, 102, 102));
        t4_save.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        t4_save.setForeground(new java.awt.Color(255, 255, 255));
        t4_save.setText("SAVE");
        t4_save.setBorder(null);
        t4_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t4_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t4_saveActionPerformed(evt);
            }
        });

        t4_update.setBackground(new java.awt.Color(0, 102, 102));
        t4_update.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        t4_update.setForeground(new java.awt.Color(255, 255, 255));
        t4_update.setText("UPDATE");
        t4_update.setBorder(null);
        t4_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        t4_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t4_updateActionPerformed(evt);
            }
        });

        t4_id.setText("id-here");

        javax.swing.GroupLayout tab4_manage_businessLayout = new javax.swing.GroupLayout(tab4_manage_business);
        tab4_manage_business.setLayout(tab4_manage_businessLayout);
        tab4_manage_businessLayout.setHorizontalGroup(
            tab4_manage_businessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab4_manage_businessLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(tab4_manage_businessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab4_manage_businessLayout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addGap(30, 30, 30)
                        .addComponent(t4_id))
                    .addGroup(tab4_manage_businessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(bname, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab4_manage_businessLayout.createSequentialGroup()
                            .addComponent(t4_update, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(t4_save, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(tab4_manage_businessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        tab4_manage_businessLayout.setVerticalGroup(
            tab4_manage_businessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4_manage_businessLayout.createSequentialGroup()
                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(tab4_manage_businessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab4_manage_businessLayout.createSequentialGroup()
                        .addGroup(tab4_manage_businessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t4_id))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tab4_manage_businessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t4_save, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t4_update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(navigationBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tab1_customer_reg, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 212, Short.MAX_VALUE)
                    .addComponent(tab3_loan_payment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 213, Short.MAX_VALUE)
                    .addComponent(tab4_manage_business, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 214, Short.MAX_VALUE)
                    .addComponent(tab2_loan_request, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navigationBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tab1_customer_reg, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tab3_loan_payment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tab4_manage_business, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(tab2_loan_request, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseClicked
        tab1_customer_reg.setVisible(true);
        tab2_loan_request.setVisible(false);
        tab3_loan_payment.setVisible(false);
        tab4_manage_business.setVisible(false);
    }//GEN-LAST:event_tab1MouseClicked

    private void tab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseClicked
        tab1_customer_reg.setVisible(false);
        tab2_loan_request.setVisible(true);
        tab3_loan_payment.setVisible(false);
        tab4_manage_business.setVisible(false);
    }//GEN-LAST:event_tab2MouseClicked

    private void tab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseClicked
        tab1_customer_reg.setVisible(false);
        tab2_loan_request.setVisible(false);
        tab3_loan_payment.setVisible(true);
        tab4_manage_business.setVisible(false);
    }//GEN-LAST:event_tab3MouseClicked

    private void tab4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab4MouseClicked
        tab1_customer_reg.setVisible(false);
        tab2_loan_request.setVisible(false);
        tab3_loan_payment.setVisible(false);
        tab4_manage_business.setVisible(true);
    }//GEN-LAST:event_tab4MouseClicked

    private void tab5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab5MouseClicked
        tab1_customer_reg.setVisible(false);
        tab3_loan_payment.setVisible(false);
        tab4_manage_business.setVisible(false);
        tab4_Panel.setVisible(false);
    }//GEN-LAST:event_tab5MouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String errorMsg = "";
        if ("".equals(fname.getText())) {
            errorMsg += " First Name is required \n";
        }

        if ("".equals(lname.getText())) {
            errorMsg += " Last Name is required \n";
        }

        if (gender.getSelectedIndex()== 0) {
            errorMsg += " Gender is required \n";
        }

        if ("".equals(email.getText())) {
            errorMsg += " Email is required \n";
        }

        if ("".equals(phone.getText())) {
            errorMsg += " Phone is required \n";
        }

        if (bank.getSelectedIndex()== 0) {
            errorMsg += " Bank Name is required \n";
        }

        if ("".equals(accountno.getText())) {
            errorMsg += " Account Number is required \n";
        }

        if ("".equals(address.getText())) {
            errorMsg += " Address is required \n";
        }

        if("".equals(errorMsg)){

            if(beneficiaryExist()){
                JOptionPane.showMessageDialog(this, "Beneficiary exit with either phone, email or account number !", "Status", JOptionPane.ERROR_MESSAGE);
                return ;
            }
            try{
                connect();
                String sql = "INSERT INTO beneficiaryreg (fname,lname,fullname,gender,email,phone,bank,accountno,address)VALUES('"
                + fname.getText()+ "'," + "'"
                + lname.getText() + "'," + "'"
                + lname.getText() + " "+fname.getText()+"',"+"'"
                + gender.getSelectedItem()  + "'," + "'"
                + email.getText().toLowerCase()+ "'," + "'"
                + phone.getText() + "'," + "'"
                + bank.getSelectedItem() + "'," + "'"
                + accountno.getText() + "'," + "'"
                + address.getText()+ "')" ;

                st.execute(sql);
                //JOptionPane.showMessageDialog(this, "Processed successful!", "Status", JOptionPane.INFORMATION_MESSAGE);
                id.setText(getTid());
                onSave();
                displayBeneficiary();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
            double amt = 0;
            String cAmt = String.format("%.2f", amt);
            try {
                connect();
                String sql = "INSERT INTO deptcheck(phone,accountno,balamount,status)VALUES('" + phone.getText()+ "'," 
                        + "'" + accountno.getText()+ "'," + "'" + cAmt + "'," + "'" + "0" + "')" ;
                st.execute(sql);
                JOptionPane.showMessageDialog(this, "Processed successful!", "Status", JOptionPane.INFORMATION_MESSAGE);
                displayBeneficiary();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
        }
        else {
            JOptionPane.showMessageDialog(this, errorMsg,"Status",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_saveActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if ("".equals(oldPhone.getText())) {
            JOptionPane.showMessageDialog(this, "Select record to modify!", "Status", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int n = JOptionPane.showConfirmDialog(this, "Are you sure you want to update beneficiary record?", "CONFIRMATION", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            double amt = 0 ;
            String cAmt = String.format("%.2f", amt);
            try {
                connect();
                String sql = "UPDATE deptcheck SET phone='" + phone.getText() + "' WHERE phone='" + oldPhone.getText() + "'";
                st.execute(sql);
                displayBeneficiary();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
            try {
                connect();
                String sql = "UPDATE beneficiaryreg SET fname='" + fname.getText()
                + "',lname='" +lname.getText()
                + "',fullname='" +lname.getText()+" "+fname.getText()
                + "',gender='" + gender.getSelectedItem()
                + "',email='" + email.getText().toLowerCase()
                + "',phone='" +phone.getText()
                + "',bank='" + bank.getSelectedItem()
                + "',accountno='" + accountno.getText()
                + "',address='" +address.getText()
                + "' WHERE phone='" + oldPhone.getText() + "'";
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(this, "Modified successful!", "Status", JOptionPane.INFORMATION_MESSAGE);
                displayBeneficiary();
                id.setText(getTid());
            }
            catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Modification error!", "Status", JOptionPane.ERROR_MESSAGE);
            }
        }
        else if (n == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(this, "Operation cancelled!", "Status", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Operation cancelled!", "Status", JOptionPane.INFORMATION_MESSAGE);
        }
        onaddNew();
        id.setText(getTid());
        displayBeneficiary();
    }//GEN-LAST:event_updateActionPerformed

    private void addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewActionPerformed
        onaddNew();
        id.setText(getTid());
        displayBeneficiary();
    }//GEN-LAST:event_addNewActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if ("".equals(phone.getText())) {
            JOptionPane.showMessageDialog(this, "Select row to delete!", "Status", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int n = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete beneficiary record?", "CONFIRMATION", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            try {
                String query = "DELETE from beneficiaryreg WHERE phone ='" + phone.getText() + "'";
                connect();
                st.executeUpdate(query);
                JOptionPane.showMessageDialog(this, "Deletion successful!", "Status", JOptionPane.INFORMATION_MESSAGE);
                displayBeneficiary();
                id.setText(getTid());
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Deletion error!", "Status", JOptionPane.ERROR_MESSAGE);
            }
        }
        else if (n == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(this, "Operation cancelled!", " Status", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Operation cancelled!","Status", JOptionPane.INFORMATION_MESSAGE);
        }
        onaddNew();
    }//GEN-LAST:event_deleteActionPerformed

    private void beneficiarytblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_beneficiarytblMouseClicked
        try {
            connect();
            int row = beneficiarytbl.getSelectedRow();
            String table_click = beneficiarytbl.getModel().getValueAt(row, 2).toString();
            String sql = "SELECT *from beneficiaryreg WHERE phone='" + table_click + "'";
            st.executeQuery(sql);
            ResultSet rs = st.getResultSet();
            if (rs.next()) {
                fname.setText(rs.getString("fname"));
                //bID.setText();
                lname.setText(rs.getString("lname"));
                gender.setSelectedItem(rs.getString("gender"));
                email.setText(rs.getString("email"));
                phone.setText(rs.getString("phone"));
                oldPhone.setText(rs.getString("phone"));
                phone.setEditable(false);
                bank.setSelectedItem(rs.getString("bank"));
                accountno.setText(rs.getString("accountno"));
                address.setText(rs.getString("address"));
            }
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        update.setEnabled(true);
        delete.setEnabled(true);
        save.setEnabled(false);
    }//GEN-LAST:event_beneficiarytblMouseClicked

    private void loanrequesttblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loanrequesttblMouseClicked
        try {
            connect();
            int row = loanrequesttbl.getSelectedRow();
            String table_click = loanrequesttbl.getModel().getValueAt(row, 1).toString();

            String sql = "SELECT *from loanrequest WHERE phone='" + table_click + "'";
            st.executeQuery(sql);
            ResultSet rs = st.getResultSet();
            if (rs.next()) {
                t2_fname.setText(rs.getString("fname"));
                t2_lname.setText(rs.getString("lname"));
                t2_email.setText(rs.getString("email"));
                t2_phone.setText(rs.getString("phone"));
                btype.setSelectedItem(rs.getString("btype"));
                payduration.setSelectedItem(rs.getString("payduration"));
                amount.setText(rs.getString("amount"));
                loandate.setText(rs.getString("loandate"));
            }
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        fname.setEditable(false);
        // mname.setEditable(false);
        lname.setEditable(false);
        email.setEditable(false);
        phone.setEditable(false);
        amount.setEditable(false);
        loandate.setEditable(false);
        payduration.setEnabled(false);
        dateGenerate();
        update.setEnabled(true);
        delete.setEnabled(false);
        request.setEnabled(false);
    }//GEN-LAST:event_loanrequesttblMouseClicked

    private void t2_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t2_searchActionPerformed
        String errorMsg = "";
        if ("".equals(phone_account.getText())) {
            errorMsg += "Phone or account number is required \n";
        }

        if("".equals(errorMsg)){
            try {
                connect();
                String sql = "SELECT * FROM BeneficiaryReg where phone='" + phone_account.getText()+"' or accountno='"+phone_account.getText()+"'";
                st.executeQuery(sql);
                ResultSet rs = st.getResultSet();
                if (rs.next()) {
                    findData.setText(rs.getString("phone"));
                }
                else {
                    JOptionPane.showMessageDialog(this, "Not a valid phone or account number!", "Status", JOptionPane.ERROR_MESSAGE);
                    findData.setText(null);
                }
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }

            // proceed to search for active loan
            try {
                String sql = "SELECT * FROM deptcheck where phone='" + phone_account.getText()+"' or accountno='"+phone_account.getText()+"'";
                st.executeQuery(sql);
                connect();
                st.executeQuery(sql);
                ResultSet rs = st.getResultSet();
                while(rs.next()) {
                    int a = Integer.parseInt(rs.getString("status"));
                    if (a == 0){ // No active loan => Eligible
                        findData.setText(rs.getString("phone"));
                        loadLoanRequestLogs(findData.getText());
                    }
                    else if (a == 1) { //active loan => Not eligible
                        JOptionPane.showMessageDialog(this, "Active loan found! You're not eligible.", "Status", JOptionPane.INFORMATION_MESSAGE);
                        findData.setText(null);
                        return;
                    }
                    else if (a == 2) { //Active loan payment completed => Eligible for another
                        JOptionPane.showMessageDialog(null,"Your loan payment is completed! You're eligible for another loan.");
                        findData.setText(rs.getString("phone"));
                        loadLoanRequestLogs(findData.getText());
                    }
                }
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex + "Loading request logs error!", "Status", JOptionPane.ERROR_MESSAGE);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, errorMsg,"Status",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_t2_searchActionPerformed

    private void t2_addNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t2_addNewActionPerformed
        onAddNewRequest();
        id.setText(getTid());
        displayRequestLogs();
    }//GEN-LAST:event_t2_addNewActionPerformed

    private void requestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestActionPerformed
        String errorMsg = "";
        if ("".equals(t2_fname.getText())) {
            errorMsg += " Forenames is required \n";
        }

        if ("".equals(t2_lname.getText())) {
            errorMsg += " Last Name is required \n";
        }

        if ("".equals(t2_email.getText())) {
            errorMsg += " Email is required \n";
        }

        if ("".equals(t2_phone.getText())) {
            errorMsg += " Phone is required \n";
        }

        if (btype.getSelectedIndex()== 0) {
            errorMsg += " Business Type is required \n";
        }

        if (payduration.getSelectedIndex()== 0) {
            errorMsg += " Payment Duration is required \n";
        }

        if ("".equals(amount.getText())) {
            errorMsg += " Amount is required \n";
        }

        if ("".equals(loandate.getText())) {
            errorMsg += " Loan Date is required \n";
        }

        if("".equals(errorMsg)){
            // proceed to search for active loan
            try {
                String sql = "SELECT * FROM deptcheck where phone='" + phone_account.getText()+"' or accountno='"+phone_account.getText()+"'";
                st.executeQuery(sql);
                connect();
                st.executeQuery(sql);
                ResultSet rs = st.getResultSet();
                while(rs.next()) {
                    int a = Integer.parseInt(rs.getString("status"));
                    if (a == 1) {
                        JOptionPane.showMessageDialog(null,"Active loan is found");
                        request.setEnabled(false);
                        update.setEnabled(false);
                        addNew.setEnabled(false);
                        delete.setEnabled(false);
                        return;
                    }
                }
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex +"Error in checking loan detail");
            }

            //calIntrestRate();
            double amt = Double.parseDouble(amount.getText());
            String cAmt = String.format("%.2f", amt);
            try {
                connect();
                String sql = "INSERT INTO loanrequest(fname,lname,fullname,email,phone,btype,payduration,amount,loandate,status)VALUES('"
                + t2_fname.getText()+ "'," + "'"
                + lname.getText() + "'," + "'"
                + t2_lname.getText() + " " +t2_fname.getText()+ "'," + "'"
                + t2_email.getText() + "'," + "'"
                + t2_phone.getText() + "'," + "'"
                + btype.getSelectedItem() + "'," + "'"
                + payduration.getSelectedItem() + "'," + "'"
                + cAmt + "'," + "'"
                + loandate.getText() + "'," + "'"
                + "Success" + "')" ;
                st.execute(sql);
                // JOptionPane.showMessageDialog(this, "Loan request is succefully");
                //onRequest();
              //  display();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
            try {
                connect();
                String sql = "UPDATE deptcheck SET fullname='" +t2_lname.getText()+" "+t2_fname.getText()
                + "',payduration='" +payduration.getSelectedItem()
                + "',loanamount='" +amount.getText()
                + "',loandate='" + loandate.getText()
                + "',status='" + "1"
                + "',balamount='" + cAmt
                + "' WHERE phone='" + t2_phone.getText() + "'";
                st.execute(sql);
                JOptionPane.showMessageDialog(this, "Loan request is succefully");
                t2_id.setText(getTid());
                //onRequest();
                //display();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
        }
        else {
            JOptionPane.showMessageDialog(this, errorMsg,"Error Message: Required Field(s)",JOptionPane.ERROR_MESSAGE);
            return;
        }        // TODO add your handling code here:
    }//GEN-LAST:event_requestActionPerformed

    private void paydurationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paydurationItemStateChanged
        /**  int check = payduration.getSelectedIndex();
        if (check == 0) {
            iRate.setText("");
        }
        if (check == 1) {
            iRate.setText("Intrest rate: 8.31%");
        }
        if (check == 2) {
            iRate.setText("Intrest rate: 8.31%");
        } **/
    }//GEN-LAST:event_paydurationItemStateChanged

    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed
        String errorMsg = "";
        if ("".equals(t3_fname.getText())) {
            errorMsg += "Forenames is required \n";
        }

        if ("".equals(t3_lname.getText())) {
            errorMsg += "Last Name is required \n";
        }

        if ("".equals(t3_phone.getText())) {
            errorMsg += "Phone is required \n";
        }

        if ("".equals(loanduration.getText())) {
            errorMsg += "Loan duration is required \n";
        }

        if ("".equals(loandate.getText())) {
            errorMsg += "Loan date is required \n";
        }

        if ("".equals(loanamount.getText())) {
            errorMsg += "Actual loan amount is required \n";
        }

        if ("".equals(balamount.getText())) {
            errorMsg += "Outstanding balance is required \n";
        }

        if ("".equals(payamount.getText())) {
            errorMsg += "Enter amount is required \n";
        }

        if ("".equals(paymentdate.getText())) {
            errorMsg += "Payable amount is required \n";
        }

        if ("".equals(paymentdate.getText())) {
            errorMsg += "Payment date is required \n";
        }
        /**
        double checktxtStatus = Double.parseDouble(balamount.getText());
        if (checktxtStatus <= 0) {
            checkStatus.setText("Complete");
            return;
        }
        else if (checktxtStatus > 0) {
            checkStatus.setText("Payment Success");
        }
        if ("".equals(checkStatus.getText())) {
            //JOptionPane.showMessageDialog(null,"");
            return;
        }
        **/
        if("".equals(errorMsg)){

            double payamt = Double.parseDouble(payamount.getText());
            String amtamt = String.format("%.2f", payamt);
            double paybal = Double.parseDouble(balamount.getText());
            String amtbal = String.format("%.2f", paybal);
            double payloan = Double.parseDouble(loanamount.getText());
            double payAllCal = paybal - payamt;
            int duration = Integer.parseInt(dnum.getText());
            if (duration == 1 ) {
                double minpay, weeks = 26;
                minpay = payloan / weeks;
                String minPay = String.format("%.2f", minpay);
                //amount enter is lessthan min pay
                if (payamt < minpay) {
                    JOptionPane.showMessageDialog(this, "Emount entered can not be lessthan N"+minPay);
                    return;
                }
                //amount enter is greaterthan outstanding bal
                else if (payamt > paybal) {
                    JOptionPane.showMessageDialog(this, "Emount entered cannot greater than N"+amtbal);
                    return;
                }//end weekly cal min and max

                else if (payAllCal < 0) {
                    JOptionPane.showMessageDialog(this, "You can ONLY pay N"+amtbal);
                    return;
                }//end you have to pay weekly bal
            }
            else if (duration == 2 ) {
                double minpay, months = 6;
                minpay = payloan / months;
                String minPay = String.format("%.2f", minpay);

                //amount enter is lessthan min pay
                if (payamt < minpay) {
                    JOptionPane.showMessageDialog(this, "Emount entered can not be lessthan N"+minPay);
                    return;
                }
                //amount enter is greaterthan outstanding bal
                else if (payamt > paybal) {
                    JOptionPane.showMessageDialog(this, "Emount entered cannot greater than N"+amtbal);
                    return;
                }
                else if (payAllCal < minpay) {
                    JOptionPane.showMessageDialog(this, "You can ONLY pay N"+amtbal);
                    return;
                }//end you have to pay weekly bal

            }//end monthly cal min and max

            if ("".equals(payamount.getText())) {
                errorMsg += "Enter amount is required \n";
            }
            try {
                connect();
                String sql = "INSERT INTO loanpayment "
                + "(fname,lname,fullname,phone,loanduration,loandate,loanamount,balamount,payamount,paymentdate,status)VALUES('"
                + t3_fname.getText()+ "'," + "'"
                + t3_lname.getText() + "'," + "'"
                + t3_lname.getText() + " " +t3_fname.getText() + "'," + "'"
                + t3_phone.getText() + "'," + "'"
                + loanduration.getText() + "'," + "'"
                + loandate.getText()+ "'," + "'"
                + loanamount.getText() + "'," + "'"
                + balamount.getText() + "'," + "'"
                + payamount.getText() + "'," + "'"
                + paymentdate.getText() + "'," + "'"
                + "Success"+"')" ;
                st.execute(sql);
                JOptionPane.showMessageDialog(this, "Payment succefully");
                t3_id.setText(getTid());
                displayPaymentLogs();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
            double oamount, pamount, left;
            oamount = Double.parseDouble(balamount.getText());
            pamount = Double.parseDouble(payamount.getText());
            left = oamount - pamount;
            String leftB = String.format("%.2f", left);
            // JOptionPane.showMessageDialog(null, leftB);
            try {
                connect();
                String sql = "UPDATE deptcheck SET balamount='" + leftB
                + "' WHERE phone='" + t3_phone.getText() + "'";
                st.execute(sql);
                JOptionPane.showMessageDialog(this, "Your outstanding balance has been updated");
                pay.setEnabled(false);
                addNew.setEnabled(true);
                displayPaymentLogs();
                //payComplete();
                double leftBd = Double.parseDouble(leftB);
                if (leftBd == 0.00) {
                    try {
                        connect();
                        String sql1 = "UPDATE deptcheck SET status='" + "2"
                        + "' WHERE phone='" + t3_phone.getText() + "'";
                        st.execute(sql1);
                        JOptionPane.showMessageDialog(this, "Your loan payment is complete, you can request for another loan");
                        pay.setEnabled(false);
                        payamount.setText(null);
                        payamount.setEditable(false);
                        addNew.setEnabled(false);
                    }
                    catch(Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.toString());
                    }
                }
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
        }
        else {
            JOptionPane.showMessageDialog(this, errorMsg,"Error Message: Required Field(s)",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_payActionPerformed

    private void makeNewPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeNewPaymentActionPerformed
        onRepay();
        t3_id.setText(getTid());
        displayPaymentLogs();
    }//GEN-LAST:event_makeNewPaymentActionPerformed

    private void loanpaymenttblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loanpaymenttblMouseClicked
        // do nothing
    }//GEN-LAST:event_loanpaymenttblMouseClicked

    private void t3_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t3_searchActionPerformed
        String errorMsg = "";
        if ("".equals(account_phone.getText())) {
            errorMsg += "Phone or account number is required \n";
        }
        if("".equals(errorMsg)){
            try {
                connect();
                String sql = "SELECT * FROM BeneficiaryReg where phone='" + account_phone.getText()+"' or accountno='"+account_phone.getText()+"'";
                st.executeQuery(sql);
                ResultSet rs = st.getResultSet();
                if (rs.next()) {
                    t3_findData.setText(rs.getString("phone"));
                }
                else {
                    JOptionPane.showMessageDialog(null,"Record not found, please use valid search detail");
                    phone.setText(null);
                    t3_findData.setText(null);
                    return;
                }
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
            // proceed to search for active loan
            try {
                String sql = "SELECT * FROM deptcheck where phone='" + account_phone.getText()+"' or accountno='"+account_phone.getText()+"'";
                st.executeQuery(sql);
                connect();
                st.executeQuery(sql);
                ResultSet rs = st.getResultSet();
                while(rs.next()) {
                    int a = Integer.parseInt(rs.getString("status"));
                    if (a == 0){
                        JOptionPane.showMessageDialog(this, "No active loan found!", "Status", JOptionPane.INFORMATION_MESSAGE);
                        t3_findData.setText(null);
                        return;
                    }
                    else if (a == 1) {
                        JOptionPane.showMessageDialog(null,"Active loan is found");
                        loadLoanPayment(t3_findData.getText());
                    }
                    else if (a == 2) {
                        JOptionPane.showMessageDialog(null,"Your loan payment is complete, you can request for another loan");
                        t3_findData.setText(null);
                        return;
                    }
                }
            }
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex +"Error in loading beneficiary detail");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, errorMsg,"Error Message: Required Field(s)",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_t3_searchActionPerformed

    private void btypetblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btypetblMouseClicked
        try {
            connect();
            int row = btypetbl.getSelectedRow();
            String table_click = btypetbl.getModel().getValueAt(row, 0).toString();

            String sql = "SELECT *from businessreg WHERE bname='"+table_click + "'";
            st.executeQuery(sql);
            ResultSet rs = st.getResultSet();
            if (rs.next()) {
                t4_id.setText(rs.getString("id"));
                bname.setText(rs.getString("bname"));
            }
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        dateGenerate();
        t4_save.setEnabled(false);
        t4_update.setEnabled(true);
    }//GEN-LAST:event_btypetblMouseClicked

    private void t4_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t4_saveActionPerformed
        String errorMsg = "";
        if ("".equals(bname.getText())) {
            errorMsg += "Business name is required \n";
        }

        if("".equals(errorMsg)){
            if(noActiveDept()){
                JOptionPane.showMessageDialog(this, "Sorry! A business already exit with " + bname.getText() +"!", "Status", JOptionPane.ERROR_MESSAGE);
                return ;
            }
            try {
                connect();
                String sql = "INSERT INTO businessreg (bname)VALUES('" + bname.getText() + "')" ;
                st.execute(sql);
                JOptionPane.showMessageDialog(this, "Processed successful!", "Status", JOptionPane.INFORMATION_MESSAGE);
                bname.setText("");
                displayBusiness();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(this, ex.toString());
            }
        }
        else {
            JOptionPane.showMessageDialog(this, errorMsg,"Status",JOptionPane.ERROR_MESSAGE);
            return;
        }        // TODO add your handling code here:
    }//GEN-LAST:event_t4_saveActionPerformed

    private void t4_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t4_updateActionPerformed
        if ("".equals(t4_id.getText())) {
            JOptionPane.showMessageDialog(this, "Modified error!", "Status", JOptionPane.ERROR_MESSAGE);
        }
        try {
            String sql = "UPDATE businessreg SET bname='" + "',bname='" +bname.getText() + "' WHERE id='" + t4_id.getText() + "'";
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(this, "Modified successful!", "Status", JOptionPane.INFORMATION_MESSAGE);
            displayBusiness();
            bname.setText("");
            t4_id.setText("");
            t4_update.setEnabled(false);
            t4_save.setEnabled(true);
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        dateGenerate();
        displayBusiness();
    }//GEN-LAST:event_t4_updateActionPerformed

    private void tab4_manage_businessComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tab4_manage_businessComponentShown
        displayBusiness();
    }//GEN-LAST:event_tab4_manage_businessComponentShown

    private void tab1_customer_regFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tab1_customer_regFocusGained
        displayBeneficiary();
    }//GEN-LAST:event_tab1_customer_regFocusGained

    private void tab1_customer_regComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tab1_customer_regComponentShown
        //update.setEnabled(false); delete.setEnabled(false); addNew.setEnabled(false);
        displayBeneficiary();
    }//GEN-LAST:event_tab1_customer_regComponentShown

    private void tab2_loan_requestComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tab2_loan_requestComponentShown
        loadBusinessType();
        displayRequestLogs();
    }//GEN-LAST:event_tab2_loan_requestComponentShown

    private void tab3_loan_paymentComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tab3_loan_paymentComponentShown
        displayPaymentLogs();
    }//GEN-LAST:event_tab3_loan_paymentComponentShown

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        dateGenerate();
        tab1_customer_reg.setVisible(false);
        tab2_loan_request.setVisible(false);
        tab3_loan_payment.setVisible(false);
        tab4_manage_business.setVisible(false);
                
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }
    
    public void connect() {
        try {
            conn = DriverManager.getConnection(ConnString, username, password);
            st = conn.createStatement();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Network Connection Error Check Your Database Connection!!!");
        }
    }
    
    public void displayBeneficiary(){
        int row = 0;
        try {
            String query = "Select fullname,email,phone,bank,accountno from beneficiaryreg";
            connect();
            st.executeQuery(query);
            ResultSet rs = st.getResultSet();
            while (rs.next())
             {
                for (int i = 0; i < 5;i++) {
                    int q = i + 1;
                    data1[row][i] = rs.getString(q);
             }
                    row++;
             }
                    rs.close();
          
           } catch (SQLException ex) 
           {
                   JOptionPane.showMessageDialog(this, ex);
           }
           Object[][]data2 = new Object[row][5];
           for(int i = 0;i<row;i++)
           {
            System.arraycopy(data1[i], 0, data2[i], 0,5);
           }
           final Object[] Column = {"Full Name", "Email", "Phone", "Bank Name", "Account Number"};
           beneficiarytbl.setModel(new javax.swing.table.DefaultTableModel(data2,Column));
           beneficiarytbl.setShowHorizontalLines(false);
           beneficiarytbl.setShowVerticalLines(false);
   }
    
    public boolean beneficiaryExist(){
        boolean ok =false;
        try {
           String Query = "SELECT * FROM BeneficiaryReg where phone='" + phone.getText()+"' or email='" + email.getText()+"' or accountno='"+accountno.getText()+"'";
            connect();
            st.execute(Query);
            ResultSet rs = st.getResultSet();
            if(rs.next())
                ok = true;
            else {
                ok = false;
            }
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());  
        }
        return ok;  
    }
    
    public  String getTid(){
        int no=0;
        try {
            String sql = "SELECT max(id)from beneficiaryreg ";
            connect();
            st.executeQuery(sql); 
            ResultSet rs = st.getResultSet();
            while(rs.next()) {      
                no = rs.getInt(1)+1;
            }  
        } 
        catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex +"Error Generating ID");
        }
        return no+"";  
    }
    
    // Managed Business Start HERE
    
    public boolean noActiveDept(){
        boolean ok = false;
        try {
           String Query = "SELECT *FROM businessreg where bname='" + bname.getText()+"'";
            connect();
            st.execute(Query);
            ResultSet rs = st.getResultSet();
            if(rs.next())
                ok = true;
            else {
                ok = false;
            }
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());  
        }
        return ok;  
    }
    
    public void displayBusiness(){
        int row = 0;
        try {
            String query = "Select bname, date from businessreg ORDER BY bname ASC";
            connect();
            st.executeQuery(query);
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                for (int i = 0; i < 2;i++) {
                    int q = i + 1;
                    data1[row][i] = rs.getString(q);
                }
                row++;
            }
            rs.close();
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
           Object[][]data2 = new Object[row][2];
           for(int i = 0;i<row;i++) {
               System.arraycopy(data1[i], 0, data2[i], 0,2);
           }
           final Object[] Column = {"Business Name", "Created At"};
           btypetbl.setModel(new javax.swing.table.DefaultTableModel(data2,Column));
           btypetbl.setShowHorizontalLines(false);
           btypetbl.setShowVerticalLines(false);
   }
    
    public void dateGenerate(){
        Date now =new Date();
        SimpleDateFormat dateFormatter = new SimpleDateFormat("E, d-M-y");
        paymentdate.setText(dateFormatter.format(now)); 
    }
    
    // Managed Business Start END
    
    //Loan Request
    public void loadLoanRequestLogs(String phone_account){
        try {
            String sql = "SELECT * FROM BeneficiaryReg where phone='"+phone_account+"' or accountno='"+phone_account+"'";
            connect();
            st.executeQuery(sql); 
            ResultSet rs = st.getResultSet();
            while(rs.next()) {   
               t2_fname.setText(rs.getString("fname"));
               t2_lname.setText(rs.getString("lname"));
               t2_email.setText(rs.getString("email"));  
               t2_phone.setText(rs.getString("phone"));
               t2_accountno.setText(rs.getString("accountno"));
            }  
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex + "Loading request logs error!", "Status", JOptionPane.ERROR_MESSAGE);
        }
   }
    public void loadBusinessType(){
        t2_fname.setEditable(false);
        t2_lname.setEditable(false);
        t2_email.setEditable(false);
        t2_phone.setEditable(false);
        //t2_accountno.
               
        try {
            String sql = "SELECT bname FROM businessreg ORDER BY bname ASC";
            connect();
            st.executeQuery(sql);
            ResultSet rs = st.getResultSet();            
            while(rs.next()) {
                btype.addItem(rs.getString("bname"));
            }   
        } 
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex );
            } 
    }
    public void displayRequestLogs(){
        int row = 0;
        try {
            String query = "Select fullname,phone,payduration,amount,loandate,status from loanrequest";
            connect();
            st.executeQuery(query);
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                for (int i = 0; i < 6;i++) {
                    int q = i + 1;
                    data1[row][i] = rs.getString(q);
                }
                row++;
            }
            rs.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        Object[][]data2 = new Object[row][6];
        for(int i = 0;i<row;i++) {
            System.arraycopy(data1[i], 0, data2[i], 0,6);
        }
        final Object[] Column = {"Full Name", "Phone", "Duration", "Amount (N)", "Date", "Status"};
        loanrequesttbl.setModel(new javax.swing.table.DefaultTableModel(data2,Column));
        loanrequesttbl.setShowHorizontalLines(true);
        loanrequesttbl.setShowVerticalLines(false);
   }
    public void onAddNewRequest(){ 
        t2_fname.setText("");
        t2_lname.setText("");
        t2_email.setText("");
        t2_phone.setText("");
        btype.setSelectedIndex(0);
        payduration.setSelectedIndex(0);
        amount.setText("");
        dateGenerate();
        
        request.setEnabled(true);
        t2_addNew.setEnabled(true);
    }//End onaddNew
    
    //Loan Payment
    public void loadLoanPayment(String phone){
        try {
            String sql = "SELECT * FROM loanrequest where phone='"+phone+"'";
            connect();
            st.executeQuery(sql); 
            ResultSet rs = st.getResultSet();
            while(rs.next()) {
               t3_fname.setText(rs.getString("fname"));
               t3_lname.setText(rs.getString("lname"));
               loanduration.setText(rs.getString("payduration"));  
               loandate.setText(rs.getString("loandate"));
               loanamount.setText(rs.getString("amount"));
               t3_phone.setText(rs.getString("phone"));
               
               String wtxt = "Weekly (max of 26-weeks)";
               String mtxt = "Monthly (max of 6-months)";
                if (rs.getString("payduration").equalsIgnoreCase((wtxt))) {
                    dnum.setText("1");
                }
                if (rs.getString("payduration").equalsIgnoreCase((mtxt))) {
                    dnum.setText("2");
                }
            }
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex +"Error in loading beneficiary detail");   
        }
        try {
            String sql = "SELECT * FROM deptcheck where phone='"+phone+"'";
            connect();
            st.executeQuery(sql); 
            ResultSet rs = st.getResultSet();
            while(rs.next()) {
                balamount.setText(rs.getString("balamount"));
            }  
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex +"Error in loading beneficiary detail");   
        }
   }
    public void displayPaymentLogs(){
        int row = 0;
        try {
            String query = "Select fullname,phone,loanduration,loanamount,payamount,paymentdate from loanpayment";
            connect();
            st.executeQuery(query);
            ResultSet rs = st.getResultSet();
            while (rs.next()) {
                for (int i = 0; i < 6;i++) {
                    int q = i + 1;
                    data1[row][i] = rs.getString(q);
                }
                    row++;
            }
            rs.close();
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
           Object[][]data2 = new Object[row][6];
           for(int i = 0;i<row;i++)
           {
            System.arraycopy(data1[i], 0, data2[i], 0,6);
           }
           final Object[] Column = {"Full Name","Phone", "Loan Duration", "Loan Amount", "Amount Paid", "Date Paid"};
           loanpaymenttbl.setModel(new javax.swing.table.DefaultTableModel(data2,Column));
           loanpaymenttbl.setShowHorizontalLines(false);
           loanpaymenttbl.setShowVerticalLines(false);
       try {
            String sql = "SELECT * FROM deptcheck where phone='"+t3_phone.getText()+"'";
            connect();
            st.executeQuery(sql); 
            ResultSet rs = st.getResultSet();
            while(rs.next()) {
                balamount.setText(rs.getString("balamount"));
            }  
        } 
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex +"Error in loading beneficiary detail");   
        }
   }
    public void onRepay(){
        payamount.setText(null);
        pay.setEnabled(true);
        makeNewPayment.setEnabled(false);
        dateGenerate();
    }//End onaddNew
    
    public void onSave(){ 
        fname.setEditable(false);
       // bID.setEditable(false);
        lname.setEditable(false);
        gender.setEnabled(false);
        email.setEditable(false);
        phone.setEditable(false);
        bank.setEnabled(false);
        accountno.setEditable(false);
        address.setEditable(false);
        
        save.setEnabled(false);
        update.setEnabled(false);
        addNew.setEnabled(true);
        delete.setEnabled(false);   
    }//End onSave
    public void onaddNew(){
        fname.setEditable(true);
        lname.setEditable(true);
        gender.setEnabled(true);
        email.setEditable(true);
        phone.setEditable(true);
        bank.setEnabled(true);
        accountno.setEditable(true);
        address.setEditable(true);
        
        fname.setText(null);
        lname.setText(null);
        gender.setSelectedIndex(0);
        email.setText(null);
        phone.setText(null);
        bank.setSelectedIndex(0);
        accountno.setText(null);
        address.setText(null);
        
        save.setEnabled(true);
        update.setEnabled(false);
        addNew.setEnabled(true);
        delete.setEnabled(false);   
    }//End onSave

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField account_phone;
    private javax.swing.JTextField accountno;
    private javax.swing.JButton addNew;
    private javax.swing.JTextField address;
    private javax.swing.JTextField amount;
    private javax.swing.JTextField balamount;
    private javax.swing.JComboBox<String> bank;
    private javax.swing.JTable beneficiarytbl;
    private javax.swing.JTextField bname;
    private javax.swing.JComboBox<String> btype;
    private javax.swing.JTable btypetbl;
    private javax.swing.JButton delete;
    private javax.swing.JTextField dnum;
    private javax.swing.JTextField email;
    private javax.swing.JLabel findData;
    private javax.swing.JTextField fname;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel iRate;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField loanamount;
    private javax.swing.JTextField loandate;
    private javax.swing.JTextField loanduration;
    private javax.swing.JTable loanpaymenttbl;
    private javax.swing.JTable loanrequesttbl;
    private javax.swing.JButton makeNewPayment;
    private javax.swing.JPanel navigationBar;
    private javax.swing.JLabel oldPhone;
    private javax.swing.JButton pay;
    private javax.swing.JTextField payamount;
    private javax.swing.JComboBox<String> payduration;
    private javax.swing.JTextField paymentdate;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField phone_account;
    private javax.swing.JButton request;
    private javax.swing.JButton save;
    private javax.swing.JLabel t2_accountno;
    private javax.swing.JButton t2_addNew;
    private javax.swing.JTextField t2_email;
    private javax.swing.JTextField t2_fname;
    private javax.swing.JTextField t2_id;
    private javax.swing.JTextField t2_lname;
    private javax.swing.JTextField t2_phone;
    private javax.swing.JButton t2_search;
    private javax.swing.JLabel t3_findData;
    private javax.swing.JTextField t3_fname;
    private javax.swing.JTextField t3_id;
    private javax.swing.JTextField t3_lname;
    private javax.swing.JTextField t3_loandate;
    private javax.swing.JTextField t3_phone;
    private javax.swing.JButton t3_search;
    private javax.swing.JLabel t4_id;
    private javax.swing.JButton t4_save;
    private javax.swing.JButton t4_update;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab1_customer_reg;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab2_loan_request;
    private javax.swing.JPanel tab3;
    private javax.swing.JPanel tab3_loan_payment;
    private javax.swing.JPanel tab4;
    private javax.swing.JPanel tab4_manage_business;
    private javax.swing.JPanel tab5;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
